// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(uuid())
  username String @unique @db.VarChar(25)
  email    String @unique @db.VarChar(50)
  /// This is hashed
  password String
  data     Json?

  friendId         String?
  friend           User?          @relation("UserToUser", fields: [friendId], references: [id])
  friends          User[]         @relation("UserToUser")
  messagesSent     Message[]      @relation("MessagesSent")
  messagesReceived Message[]      @relation("MessagesReceived")
  group            Group[]
  groupMessages    GroupMessage[]
}

model Message {
  id           String   @id @default(uuid())
  content      String   @db.VarChar(140)
  creationTime DateTime @default(now())

  file       File?
  sender     User   @relation("MessagesSent", fields: [senderId], references: [id])
  senderId   String
  receiver   User   @relation("MessagesReceived", fields: [receiverId], references: [id])
  receiverId String
}

model File {
  id                String  @id @default(uuid())
  name              String  @db.VarChar(50)
  url               String?
  urlExpirationDate String?

  message   Message @relation(fields: [messageId], references: [id])
  messageId String  @unique
}

model Group {
  id   String @id @default(uuid())
  name String

  users         User[]
  groupMessages GroupMessage[]
}

model GroupMessage {
  id           String   @id @default(uuid())
  content      String   @db.VarChar(140)
  creationTime DateTime @default(now())

  file     GroupFile?
  sender   User       @relation(fields: [senderId], references: [id])
  senderId String
  group    Group      @relation(fields: [groupId], references: [id])
  groupId  String
}

model GroupFile {
  id                String  @id @default(uuid())
  name              String  @db.VarChar(50)
  url               String?
  urlExpirationDate String?

  groupMessage   GroupMessage @relation(fields: [groupMessageId], references: [id])
  groupMessageId String       @unique
}
